//========================================================================
// ubmark-cmplx-mult: complex multiply kernel
//========================================================================
//
// This code performs complex multiplication for two arrays:
//
// void cmplx_mult( int *dest, int *src0, int *src1, int size ) {
//   for ( int i = 0; i < size; i += 2 ) {
//     int src0_real = src0[i];
//     int src0_imag = src0[i+1];
//     int src1_real = src1[i];
//     int src1_imag = src1[i+1];
//     int result_real = ( src0_real * src1_real ) -
//                       ( src0_imag * src1_imag );
//     int result_imag = ( src0_real * src1_imag ) +
//                       ( src0_imag * src1_real );
//     dest[i]   = result_real;
//     dest[i+1] = result_imag;
// }

// pointers for the input and output arrays
localparam c_cmplx_mult_src0_ptr = 32'h2000;
localparam c_cmplx_mult_src1_ptr = 32'h3000;
localparam c_cmplx_mult_dest_ptr = 32'h4000;
localparam c_cmplx_mult_size     = 200;

//------------------------------------------------------------------------
// initialize complex multiply kernel
//------------------------------------------------------------------------

task init_cmplx_mult;
begin
  clear_mem;

  address( c_reset_vector );
  // load pointers and array size
  inst( "mfc0  r1, mngr2proc " ); init_src( c_cmplx_mult_size );
  inst( "mfc0  r2, mngr2proc " ); init_src( c_cmplx_mult_src0_ptr );
  inst( "mfc0  r3, mngr2proc " ); init_src( c_cmplx_mult_src1_ptr );
  inst( "mfc0  r4, mngr2proc " ); init_src( c_cmplx_mult_dest_ptr );
  inst( "addiu r5, r0, 0     " );
  // loop:
  inst( "lw    r6, 0(r2)     " ); // src0_real
  inst( "lw    r8, 0(r3)     " ); // src1_real
  inst( "lw    r7, 4(r2)     " ); // src0_imag
  inst( "lw    r9, 4(r3)     " ); // src1_imag
  inst( "mul   r10, r6, r8   " ); // real * real
  inst( "mul   r11, r7, r9   " ); // imag * imag
  inst( "mul   r12, r7, r8   " ); // imag * real
  inst( "mul   r13, r6, r9   " ); // real * imag
  inst( "subu  r14, r10,r11  " ); // dest_real
  inst( "addu  r15, r12,r13  " ); // dest_imag
  inst( "addiu r5, r5, 2     " );
  inst( "addiu r2, r2, 8     " );
  inst( "addiu r3, r3, 8     " );
  inst( "sw    r14, 0(r4)    " );
  inst( "sw    r15, 4(r4)    " );
  inst( "addiu r4, r4, 8     " );
  inst( "bne   r5, r1, [-16] " ); // goto loop:
  // after loop:, marks the end of program
  inst( "mtc0  r0, proc2mngr " ); init_sink( 32'h00000000 );
  inst( "nop                 " );
  inst( "nop                 " );
  inst( "nop                 " );
  inst( "nop                 " );
  inst( "nop                 " );
  inst( "nop                 " );

  // initialize data
  init_cmplx_mult_data;

end
endtask

//------------------------------------------------------------------------
// initialize source and reference data for cmplx_mult
//------------------------------------------------------------------------

task init_cmplx_mult_data;
begin

  ubmark_name = "cmplx-mult";
  ubmark_dest_size = c_cmplx_mult_size;

  address( c_cmplx_mult_src0_ptr );

  data( 32'd6   );
  data( 32'd106 );
  data( 32'd164 );
  data( 32'd150 );
  data( 32'd142 );
  data( 32'd222 );
  data( 32'd104 );
  data( 32'd129 );
  data( 32'd172 );
  data( 32'd15  );
  data( 32'd203 );
  data( 32'd76  );
  data( 32'd179 );
  data( 32'd214 );
  data( 32'd80  );
  data( 32'd39  );
  data( 32'd243 );
  data( 32'd175 );
  data( 32'd86  );
  data( 32'd254 );
  data( 32'd100 );
  data( 32'd194 );
  data( 32'd67  );
  data( 32'd163 );
  data( 32'd117 );
  data( 32'd63  );
  data( 32'd53  );
  data( 32'd104 );
  data( 32'd132 );
  data( 32'd29  );
  data( 32'd158 );
  data( 32'd155 );
  data( 32'd163 );
  data( 32'd81  );
  data( 32'd142 );
  data( 32'd106 );
  data( 32'd17  );
  data( 32'd191 );
  data( 32'd155 );
  data( 32'd68  );
  data( 32'd188 );
  data( 32'd33  );
  data( 32'd105 );
  data( 32'd92  );
  data( 32'd157 );
  data( 32'd231 );
  data( 32'd127 );
  data( 32'd173 );
  data( 32'd10  );
  data( 32'd219 );
  data( 32'd188 );
  data( 32'd70  );
  data( 32'd243 );
  data( 32'd212 );
  data( 32'd143 );
  data( 32'd150 );
  data( 32'd237 );
  data( 32'd107 );
  data( 32'd191 );
  data( 32'd9   );
  data( 32'd36  );
  data( 32'd179 );
  data( 32'd197 );
  data( 32'd15  );
  data( 32'd230 );
  data( 32'd231 );
  data( 32'd244 );
  data( 32'd149 );
  data( 32'd35  );
  data( 32'd12  );
  data( 32'd200 );
  data( 32'd222 );
  data( 32'd174 );
  data( 32'd142 );
  data( 32'd5   );
  data( 32'd234 );
  data( 32'd100 );
  data( 32'd167 );
  data( 32'd68  );
  data( 32'd244 );
  data( 32'd20  );
  data( 32'd13  );
  data( 32'd61  );
  data( 32'd38  );
  data( 32'd110 );
  data( 32'd185 );
  data( 32'd11  );
  data( 32'd176 );
  data( 32'd80  );
  data( 32'd192 );
  data( 32'd144 );
  data( 32'd138 );
  data( 32'd118 );
  data( 32'd132 );
  data( 32'd6   );
  data( 32'd184 );
  data( 32'd53  );
  data( 32'd135 );
  data( 32'd16  );
  data( 32'd65  );
  data( 32'd50  );
  data( 32'd146 );
  data( 32'd234 );
  data( 32'd184 );
  data( 32'd77  );
  data( 32'd210 );
  data( 32'd180 );
  data( 32'd113 );
  data( 32'd155 );
  data( 32'd238 );
  data( 32'd126 );
  data( 32'd67  );
  data( 32'd170 );
  data( 32'd38  );
  data( 32'd222 );
  data( 32'd0   );
  data( 32'd124 );
  data( 32'd94  );
  data( 32'd2   );
  data( 32'd76  );
  data( 32'd254 );
  data( 32'd152 );
  data( 32'd220 );
  data( 32'd228 );
  data( 32'd182 );
  data( 32'd194 );
  data( 32'd102 );
  data( 32'd255 );
  data( 32'd118 );
  data( 32'd245 );
  data( 32'd54  );
  data( 32'd159 );
  data( 32'd242 );
  data( 32'd123 );
  data( 32'd215 );
  data( 32'd55  );
  data( 32'd229 );
  data( 32'd113 );
  data( 32'd87  );
  data( 32'd187 );
  data( 32'd5   );
  data( 32'd245 );
  data( 32'd116 );
  data( 32'd142 );
  data( 32'd23  );
  data( 32'd133 );
  data( 32'd255 );
  data( 32'd77  );
  data( 32'd161 );
  data( 32'd208 );
  data( 32'd21  );
  data( 32'd245 );
  data( 32'd182 );
  data( 32'd251 );
  data( 32'd39  );
  data( 32'd2   );
  data( 32'd119 );
  data( 32'd188 );
  data( 32'd131 );
  data( 32'd108 );
  data( 32'd54  );
  data( 32'd211 );
  data( 32'd5   );
  data( 32'd145 );
  data( 32'd170 );
  data( 32'd235 );
  data( 32'd208 );
  data( 32'd28  );
  data( 32'd50  );
  data( 32'd19  );
  data( 32'd26  );
  data( 32'd190 );
  data( 32'd147 );
  data( 32'd61  );
  data( 32'd93  );
  data( 32'd53  );
  data( 32'd39  );
  data( 32'd232 );
  data( 32'd204 );
  data( 32'd100 );
  data( 32'd175 );
  data( 32'd198 );
  data( 32'd10  );
  data( 32'd153 );
  data( 32'd94  );
  data( 32'd0   );
  data( 32'd116 );
  data( 32'd110 );
  data( 32'd236 );
  data( 32'd30  );
  data( 32'd145 );
  data( 32'd32  );
  data( 32'd8   );
  data( 32'd7   );
  data( 32'd78  );
  data( 32'd37  );
  data( 32'd1   );
  data( 32'd202 );
  data( 32'd204 );
  data( 32'd48  );

  address( c_cmplx_mult_src1_ptr );

  data( 32'd111 );
  data( 32'd20  );
  data( 32'd248 );
  data( 32'd245 );
  data( 32'd106 );
  data( 32'd130 );
  data( 32'd7   );
  data( 32'd42  );
  data( 32'd74  );
  data( 32'd90  );
  data( 32'd81  );
  data( 32'd146 );
  data( 32'd145 );
  data( 32'd56  );
  data( 32'd224 );
  data( 32'd37  );
  data( 32'd141 );
  data( 32'd111 );
  data( 32'd250 );
  data( 32'd186 );
  data( 32'd33  );
  data( 32'd4   );
  data( 32'd154 );
  data( 32'd206 );
  data( 32'd222 );
  data( 32'd52  );
  data( 32'd105 );
  data( 32'd36  );
  data( 32'd197 );
  data( 32'd3   );
  data( 32'd153 );
  data( 32'd56  );
  data( 32'd29  );
  data( 32'd150 );
  data( 32'd124 );
  data( 32'd70  );
  data( 32'd165 );
  data( 32'd184 );
  data( 32'd15  );
  data( 32'd27  );
  data( 32'd251 );
  data( 32'd20  );
  data( 32'd30  );
  data( 32'd114 );
  data( 32'd173 );
  data( 32'd78  );
  data( 32'd58  );
  data( 32'd57  );
  data( 32'd73  );
  data( 32'd121 );
  data( 32'd239 );
  data( 32'd0   );
  data( 32'd169 );
  data( 32'd209 );
  data( 32'd72  );
  data( 32'd153 );
  data( 32'd185 );
  data( 32'd191 );
  data( 32'd90  );
  data( 32'd16  );
  data( 32'd135 );
  data( 32'd46  );
  data( 32'd95  );
  data( 32'd201 );
  data( 32'd215 );
  data( 32'd94  );
  data( 32'd212 );
  data( 32'd152 );
  data( 32'd19  );
  data( 32'd132 );
  data( 32'd215 );
  data( 32'd233 );
  data( 32'd149 );
  data( 32'd4   );
  data( 32'd147 );
  data( 32'd224 );
  data( 32'd140 );
  data( 32'd220 );
  data( 32'd251 );
  data( 32'd253 );
  data( 32'd43  );
  data( 32'd210 );
  data( 32'd220 );
  data( 32'd54  );
  data( 32'd166 );
  data( 32'd164 );
  data( 32'd172 );
  data( 32'd95  );
  data( 32'd172 );
  data( 32'd12  );
  data( 32'd37  );
  data( 32'd136 );
  data( 32'd2   );
  data( 32'd28  );
  data( 32'd213 );
  data( 32'd62  );
  data( 32'd153 );
  data( 32'd131 );
  data( 32'd219 );
  data( 32'd204 );
  data( 32'd228 );
  data( 32'd118 );
  data( 32'd39  );
  data( 32'd117 );
  data( 32'd197 );
  data( 32'd173 );
  data( 32'd10  );
  data( 32'd132 );
  data( 32'd208 );
  data( 32'd174 );
  data( 32'd54  );
  data( 32'd53  );
  data( 32'd181 );
  data( 32'd219 );
  data( 32'd19  );
  data( 32'd162 );
  data( 32'd81  );
  data( 32'd47  );
  data( 32'd229 );
  data( 32'd140 );
  data( 32'd225 );
  data( 32'd202 );
  data( 32'd10  );
  data( 32'd176 );
  data( 32'd134 );
  data( 32'd247 );
  data( 32'd107 );
  data( 32'd166 );
  data( 32'd226 );
  data( 32'd180 );
  data( 32'd20  );
  data( 32'd153 );
  data( 32'd91  );
  data( 32'd219 );
  data( 32'd34  );
  data( 32'd26  );
  data( 32'd149 );
  data( 32'd40  );
  data( 32'd147 );
  data( 32'd190 );
  data( 32'd11  );
  data( 32'd133 );
  data( 32'd63  );
  data( 32'd16  );
  data( 32'd65  );
  data( 32'd184 );
  data( 32'd193 );
  data( 32'd224 );
  data( 32'd101 );
  data( 32'd245 );
  data( 32'd2   );
  data( 32'd126 );
  data( 32'd232 );
  data( 32'd69  );
  data( 32'd63  );
  data( 32'd250 );
  data( 32'd82  );
  data( 32'd232 );
  data( 32'd214 );
  data( 32'd121 );
  data( 32'd245 );
  data( 32'd75  );
  data( 32'd111 );
  data( 32'd146 );
  data( 32'd98  );
  data( 32'd251 );
  data( 32'd251 );
  data( 32'd4   );
  data( 32'd109 );
  data( 32'd116 );
  data( 32'd149 );
  data( 32'd11  );
  data( 32'd75  );
  data( 32'd98  );
  data( 32'd70  );
  data( 32'd217 );
  data( 32'd222 );
  data( 32'd151 );
  data( 32'd110 );
  data( 32'd140 );
  data( 32'd78  );
  data( 32'd198 );
  data( 32'd12  );
  data( 32'd192 );
  data( 32'd235 );
  data( 32'd116 );
  data( 32'd67  );
  data( 32'd153 );
  data( 32'd253 );
  data( 32'd20  );
  data( 32'd196 );
  data( 32'd95  );
  data( 32'd99  );
  data( 32'd234 );
  data( 32'd215 );
  data( 32'd138 );
  data( 32'd160 );
  data( 32'd153 );
  data( 32'd18  );
  data( 32'd75  );

  ref_address( c_cmplx_mult_dest_ptr );

  ref_data(-32'd1454  );
  ref_data( 32'd11886 );
  ref_data( 32'd3922  );
  ref_data( 32'd77380 );
  ref_data(-32'd13808 );
  ref_data( 32'd41992 );
  ref_data(-32'd4690  );
  ref_data( 32'd5271  );
  ref_data( 32'd11378 );
  ref_data( 32'd16590 );
  ref_data( 32'd5347  );
  ref_data( 32'd35794 );
  ref_data( 32'd13971 );
  ref_data( 32'd41054 );
  ref_data( 32'd16477 );
  ref_data( 32'd11696 );
  ref_data( 32'd14838 );
  ref_data( 32'd51648 );
  ref_data(-32'd25744 );
  ref_data( 32'd79496 );
  ref_data( 32'd2524  );
  ref_data( 32'd6802  );
  ref_data(-32'd23260 );
  ref_data( 32'd38904 );
  ref_data( 32'd22698 );
  ref_data( 32'd20070 );
  ref_data( 32'd1821  );
  ref_data( 32'd12828 );
  ref_data( 32'd25917 );
  ref_data( 32'd6109  );
  ref_data( 32'd15494 );
  ref_data( 32'd32563 );
  ref_data(-32'd7423  );
  ref_data( 32'd26799 );
  ref_data( 32'd10188 );
  ref_data( 32'd23084 );
  ref_data(-32'd32339 );
  ref_data( 32'd34643 );
  ref_data( 32'd489   );
  ref_data( 32'd5205  );
  ref_data( 32'd46528 );
  ref_data( 32'd12043 );
  ref_data(-32'd7338  );
  ref_data( 32'd14730 );
  ref_data( 32'd9143  );
  ref_data( 32'd52209 );
  ref_data(-32'd2495  );
  ref_data( 32'd17273 );
  ref_data(-32'd25769 );
  ref_data( 32'd17197 );
  ref_data( 32'd44932 );
  ref_data( 32'd16730 );
  ref_data(-32'd3241  );
  ref_data( 32'd86615 );
  ref_data(-32'd12654 );
  ref_data( 32'd32679 );
  ref_data( 32'd23408 );
  ref_data( 32'd65062 );
  ref_data( 32'd17046 );
  ref_data( 32'd3866  );
  ref_data(-32'd3374  );
  ref_data( 32'd25821 );
  ref_data( 32'd15700 );
  ref_data( 32'd41022 );
  ref_data( 32'd27736 );
  ref_data( 32'd71285 );
  ref_data( 32'd29080 );
  ref_data( 32'd68676 );
  ref_data(-32'd919   );
  ref_data( 32'd4848  );
  ref_data(-32'd8726  );
  ref_data( 32'd94330 );
  ref_data( 32'd25358 );
  ref_data( 32'd21854 );
  ref_data(-32'd51681 );
  ref_data( 32'd35518 );
  ref_data(-32'd22740 );
  ref_data( 32'd45380 );
  ref_data(-32'd44664 );
  ref_data( 32'd78448 );
  ref_data(-32'd1870  );
  ref_data( 32'd4759  );
  ref_data( 32'd11368 );
  ref_data( 32'd11654 );
  ref_data(-32'd12080 );
  ref_data( 32'd48750 );
  ref_data(-32'd14828 );
  ref_data( 32'd31317 );
  ref_data( 32'd11456 );
  ref_data( 32'd33984 );
  ref_data(-32'd13440 );
  ref_data( 32'd24690 );
  ref_data(-32'd3460  );
  ref_data( 32'd3568  );
  ref_data(-32'd10130 );
  ref_data( 32'd39564 );
  ref_data(-32'd9576  );
  ref_data( 32'd27598 );
  ref_data(-32'd9756  );
  ref_data( 32'd17499 );
  ref_data(-32'd5828  );
  ref_data( 32'd39188 );
  ref_data(-32'd12402 );
  ref_data( 32'd34554 );
  ref_data(-32'd21161 );
  ref_data( 32'd54691 );
  ref_data(-32'd13116 );
  ref_data( 32'd24890 );
  ref_data(-32'd9172  );
  ref_data( 32'd76474 );
  ref_data( 32'd3253  );
  ref_data( 32'd10296 );
  ref_data( 32'd22448 );
  ref_data( 32'd44108 );
  ref_data( 32'd4218  );
  ref_data( 32'd35964 );
  ref_data( 32'd5626  );
  ref_data( 32'd13442 );
  ref_data(-32'd10182 );
  ref_data( 32'd17684 );
  ref_data( 32'd26446 );
  ref_data( 32'd85508 );
  ref_data(-32'd37928 );
  ref_data( 32'd41000 );
  ref_data(-32'd23530 );
  ref_data( 32'd70950 );
  ref_data(-32'd31416 );
  ref_data( 32'd44217 );
  ref_data(-32'd17432 );
  ref_data( 32'd76610 );
  ref_data(-32'd23247 );
  ref_data( 32'd11442 );
  ref_data(-32'd4915  );
  ref_data( 32'd64191 );
  ref_data( 32'd5880  );
  ref_data( 32'd7460  );
  ref_data( 32'd29601 );
  ref_data( 32'd25997 );
  ref_data(-32'd22741 );
  ref_data( 32'd44019 );
  ref_data(-32'd32530 );
  ref_data( 32'd3360  );
  ref_data( 32'd5036  );
  ref_data( 32'd10802 );
  ref_data(-32'd22977 );
  ref_data( 32'd12877 );
  ref_data( 32'd31967 );
  ref_data( 32'd71981 );
  ref_data(-32'd34699 );
  ref_data( 32'd60453 );
  ref_data(-32'd30828 );
  ref_data( 32'd3136  );
  ref_data( 32'd24905 );
  ref_data( 32'd70790 );
  ref_data( 32'd1957  );
  ref_data( 32'd9876  );
  ref_data(-32'd33858 );
  ref_data( 32'd43024 );
  ref_data( 32'd14966 );
  ref_data( 32'd38963 );
  ref_data(-32'd2595  );
  ref_data( 32'd55745 );
  ref_data(-32'd20615 );
  ref_data( 32'd16825 );
  ref_data(-32'd42325 );
  ref_data( 32'd65700 );
  ref_data( 32'd52096 );
  ref_data( 32'd7860  );
  ref_data( 32'd3246  );
  ref_data( 32'd7871  );
  ref_data( 32'd1784  );
  ref_data( 32'd28596 );
  ref_data( 32'd5047  );
  ref_data( 32'd18981 );
  ref_data(-32'd4991  );
  ref_data( 32'd23891 );
  ref_data(-32'd26374 );
  ref_data( 32'd57393 );
  ref_data( 32'd8440  );
  ref_data( 32'd39560 );
  ref_data(-32'd25554 );
  ref_data( 32'd50094 );
  ref_data(-32'd29256 );
  ref_data( 32'd3756  );
  ref_data( 32'd22090 );
  ref_data( 32'd10904 );
  ref_data(-32'd9058  );
  ref_data( 32'd25118 );
  ref_data( 32'd59108 );
  ref_data( 32'd12310 );
  ref_data( 32'd25380 );
  ref_data( 32'd20047 );
  ref_data(-32'd846   );
  ref_data( 32'd2565  );
  ref_data( 32'd11664 );
  ref_data( 32'd18719 );
  ref_data(-32'd30746 );
  ref_data( 32'd32473 );
  ref_data( 32'd72    );
  ref_data( 32'd16164 );


end
endtask
